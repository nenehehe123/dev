

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# Step 1: Load the dataset
url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/spambase/spambase.data'
columns = [f'feature_{i}' for i in range(1, 58)] + ['label']
df = pd.read_csv(url, header=None, names=columns)

# Step 2: Clean the data
df.dropna(inplace=True)
df.drop_duplicates(inplace=True)

# Step 3: Summary statistics
print("Summary Statistics:")
print(df.describe())

print("\nSpam vs Non-Spam Counts:")
print(df['label'].value_counts())

# Step 4: Spam vs Non-Spam Distribution Plot
plt.figure(figsize=(8, 5))
sns.countplot(x='label', data=df, palette='Set2')
plt.title('Spam vs Non-Spam Distribution')
plt.xlabel('Email Type (0: Non-Spam, 1: Spam)')
plt.ylabel('Count')
plt.show()

# Step 5: Standardize features for pairplot
scaler = StandardScaler()
df_scaled = pd.DataFrame(scaler.fit_transform(df.iloc[:, :-1]), columns=columns[:-1])
df_scaled['label'] = df['label'].values

# Pairplot of first 4 features
sns.pairplot(df_scaled.iloc[:, :5].assign(label=df_scaled['label']), hue='label', palette='husl')
plt.suptitle('Pairplot of Features by Label', y=1.02)
plt.show()

# Step 6: Apply PCA and visualize
pca = PCA(n_components=2)
principal_components = pca.fit_transform(df_scaled.iloc[:, :-1])
df_pca = pd.DataFrame(principal_components, columns=['PC1', 'PC2'])
df_pca['label'] = df_scaled['label']

plt.figure(figsize=(10, 6))
sns.scatterplot(x='PC1', y='PC2', hue='label', data=df_pca, palette='Set1', alpha=0.7)
plt.title('PCA of Email Features')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.show()

# Step 7: Key insights
print("Insights:")
print("- More non-spam emails than spam.")
print("- Some features clearly separate spam from non-spam.")
print("- PCA helps visualize feature separability.")
